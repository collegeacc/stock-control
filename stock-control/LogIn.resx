<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        A//Dw/H/g4Px/wEAwH8BAMB///////////8=
</value>
  </data>
</root>